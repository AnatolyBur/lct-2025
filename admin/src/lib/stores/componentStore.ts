// Store –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { writable, derived, get } from 'svelte/store';
import type { Component, ComponentInstance, ComponentMetadata, BasePageField } from '$lib/types/page';
import { apiClient } from '$lib/api/client';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª—è
function getFieldDisplayName(fields: BasePageField[], fieldKey: string): string {
  // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –ø–æ–ª—è—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const field = fields?.find(f => f.name === fieldKey);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º help_text –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è
  if (field?.help_text) {
    return field.help_text;
  }
  
  // –ï—Å–ª–∏ –Ω–µ—Ç help_text, –ø—Ä–æ–±—É–µ–º verbose_name –∫–∞–∫ fallback
  if (field?.verbose_name) {
    return field.verbose_name;
  }
  
  // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª—é—á —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã
  return fieldKey.charAt(0).toUpperCase() + fieldKey.slice(1).replace(/_/g, ' ');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø–æ–ª–µ–π
function enrichComponentData(instance: ComponentInstance): ComponentInstance {
  if (!instance.data || !instance.component.fields) {
    return instance;
  }

  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø–æ–ª–µ–π
  const enrichedData: Record<string, any> = {};
  const fieldDisplayNames: Record<string, string> = {};

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  Object.entries(instance.data).forEach(([key, value]) => {
    enrichedData[key] = value;
    fieldDisplayNames[key] = getFieldDisplayName(instance.component.fields, key);
  });

  // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, component.data.object), –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –µ–≥–æ
  if (instance.data.object && typeof instance.data.object === 'object') {
    const enrichedObject: Record<string, any> = {};
    Object.entries(instance.data.object).forEach(([key, value]) => {
      enrichedObject[key] = value;
      fieldDisplayNames[key] = getFieldDisplayName(instance.component.fields, key);
    });
    enrichedData.object = enrichedObject;
  }

  return {
    ...instance,
    data: enrichedData,
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ —Å —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    fieldDisplayNames
  };
}

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
export const componentLoading = writable(false);
export const componentError = writable<string | null>(null);

// –§–ª–∞–≥–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫
let componentsLoading = false;
let componentInstancesLoading = false;

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export const componentNotification = writable<{
  type: 'success' | 'error' | 'warning' | 'info';
  message: string;
  show: boolean;
} | null>(null);

// –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
export const availableComponents = writable<Component[]>([]);

// –≠–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
export const componentInstances = writable<ComponentInstance[]>([]);

// –¢–µ–∫—É—â–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
export const currentComponent = writable<ComponentInstance | null>(null);

// –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
export const currentComponentMetadata = writable<ComponentMetadata | null>(null);

// –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (create | edit | view)
export const componentEditMode = writable<'create' | 'edit' | 'view'>('view');

// –í—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
export const selectedComponentType = writable<Component | null>(null);

// –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
export const componentActions = {
  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  async loadAvailableComponents() {
    // –ï—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ
    if (get(availableComponents).length > 0) {
      return;
    }

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –≤—ã–∑–æ–≤—ã
    if (componentsLoading) {
      return;
    }

    try {
      componentsLoading = true;
      componentLoading.set(true);
      componentError.set(null);
      
      const components = await apiClient.getComponents();
      availableComponents.set(components);
    } catch (err) {
      componentError.set(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤');
    } finally {
      componentsLoading = false;
      componentLoading.set(false);
    }
  },

  // –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  async loadComponentMetadata(componentId: string) {
    try {
      componentLoading.set(true);
      componentError.set(null);
      
      const metadata = await apiClient.getComponentMetadata(componentId);
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Component –≤ ComponentMetadata
      const componentMetadata: ComponentMetadata = {
        fields: metadata.fields,
        component_name: metadata.name,
        component_type: metadata.component_type || metadata.type,
        config: metadata.config
      };
      currentComponentMetadata.set(componentMetadata);
      
      return componentMetadata;
    } catch (err) {
      componentError.set(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
      throw err;
    } finally {
      componentLoading.set(false);
    }
  },

  // –ó–∞–≥—Ä—É–∑–∫–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  async loadComponentInstances(pageId?: number) {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –≤—ã–∑–æ–≤—ã
    if (componentInstancesLoading) {
      return;
    }

    try {
      componentInstancesLoading = true;
      componentLoading.set(true);
      componentError.set(null);
      
      const instances = await apiClient.getComponentInstances(pageId);
      // –û–±–æ–≥–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø–æ–ª–µ–π
      const enrichedInstances = instances.map(enrichComponentData);
      componentInstances.set(enrichedInstances);
    } catch (err) {
      componentError.set(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤');
    } finally {
      componentInstancesLoading = false;
      componentLoading.set(false);
    }
  },

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  async loadComponentInstance(id: string) {
    try {
      componentLoading.set(true);
      componentError.set(null);
      const instance = await apiClient.getComponentInstance(id);
      console.log('üì• Store: –ó–∞–≥—Ä—É–∂–µ–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞', instance);
      
      // –û–±–æ–≥–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      const enrichedInstance = enrichComponentData(instance);
      currentComponent.set(enrichedInstance);
      componentEditMode.set('edit');
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      const metadata = await this.loadComponentMetadata(instance.component_id);
      console.log('üì• Store: –ó–∞–≥—Ä—É–∂–µ–Ω—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞', metadata);
    } catch (err) {
      componentError.set(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
    } finally {
      componentLoading.set(false);
    }
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  async createComponent(componentType: string, data: Record<string, any>, options?: { pageId?: number; viewOrder?: number }) {
    try {
      componentLoading.set(true);
      componentError.set(null);
      const newComponent = await apiClient.createComponent(componentType, data, options?.pageId, options?.viewOrder);
      
      // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω pageId, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      if (options?.pageId) {
        await this.loadComponentInstances(options.pageId);
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      this.showNotification('success', '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
      
      return newComponent;
    } catch (err) {
      componentError.set(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
      throw err;
    } finally {
      componentLoading.set(false);
    }
  },

  // –î–æ–±–∞–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (—Å–æ–∑–¥–∞–µ—Ç –∏–Ω—Å—Ç–∞–Ω—Å –∏–∑ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ)
  async addExistingComponentToPage(componentId: string, options?: { pageId?: number; viewOrder?: number; copy?: boolean }) {
    try {
      componentLoading.set(true);
      componentError.set(null);
      const instance = await apiClient.createComponentInstanceFromExisting(componentId, options?.pageId, options?.viewOrder, options?.copy ?? true);
      // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω pageId, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      if (options?.pageId) {
        await this.loadComponentInstances(options.pageId);
      } else {
        // –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏–º –≤ —Å–ø–∏—Å–æ–∫
        componentInstances.update(list => [instance, ...list]);
      }
      this.showNotification('success', options?.copy === false ? '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ' : '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
      return instance;
    } catch (err) {
      componentError.set(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
      throw err;
    } finally {
      componentLoading.set(false);
    }
  },

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  async updateComponentInstance(id: string, data: Record<string, any>) {
    try {
      componentLoading.set(true);
      componentError.set(null);
      const updatedInstance = await apiClient.updateComponentInstance(id, data);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
      componentInstances.update(instances => 
        instances.map(instance => String(instance.id) === String(id) ? updatedInstance : instance)
      );
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
      currentComponent.set(updatedInstance);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      this.showNotification('success', '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      
      return updatedInstance;
    } catch (err) {
      componentError.set(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
      throw err;
    } finally {
      componentLoading.set(false);
    }
  },

  // –£–¥–∞–ª–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  async deleteComponentInstance(id: string) {
    try {
      componentLoading.set(true);
      componentError.set(null);
      await apiClient.deleteComponentInstance(id);
      
      // –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
      componentInstances.update(instances => instances.filter(instance => String(instance.id) !== String(id)));
      
      // –ï—Å–ª–∏ —É–¥–∞–ª—è–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—ã–ª —Ç–µ–∫—É—â–∏–º, –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      currentComponent.update(instance => String(instance?.id ?? '') === String(id) ? null : instance);
      
      if (currentComponent) {
        componentEditMode.set('view');
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      this.showNotification('success', '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');
    } catch (err) {
      componentError.set(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
      throw err;
    } finally {
      componentLoading.set(false);
    }
  },


  // –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  startCreate(componentType?: Component) {
    currentComponent.set(null);
    componentEditMode.set('create');
    selectedComponentType.set(componentType || null);
    componentError.set(null);
  },

  // –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  startView() {
    componentEditMode.set('view');
    componentError.set(null);
  },

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  async reorderPageComponents(pageId: number, components: ComponentInstance[]) {
    try {
      componentLoading.set(true);
      componentError.set(null);
      
      console.log('üîÑ Store: –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤', {
        pageId,
        componentsCount: components.length,
        components: components.map(c => ({ id: c.id, title: c.component.name }))
      });
      
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è API
      const componentsData = components.map((component, index) => ({
        id: String(component.component_id || component.id),
        view_order: index + 1
      }));
      
      console.log('üì§ Store: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä', componentsData);
      
      const result = await apiClient.reorderPageComponents(pageId, componentsData);
      
      console.log('üì• Store: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞', result);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ –æ—Ç–≤–µ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞ (–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ view_order)
      const idToOrder = new Map<string, number>(
        (result.components || []).map(c => [String(c.id), Number(c.view_order) || 0])
      );
      const updatedComponents = components.map(c => ({
        ...c,
        view_order: idToOrder.get(String(c.component_id || c.id)) ?? c.view_order ?? 0,
      }));
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ view_order –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
      updatedComponents.sort((a, b) => (a.view_order ?? 0) - (b.view_order ?? 0));
      componentInstances.set(updatedComponents);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      this.showNotification('success', '–ü–æ—Ä—è–¥–æ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      
      return result;
    } catch (err) {
      const errorMessage = err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤';
      console.error('‚ùå Store: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤', err);
      componentError.set(errorMessage);
      this.showNotification('error', errorMessage);
      throw err;
    } finally {
      componentLoading.set(false);
    }
  },

  // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–æ–∫
  clearError() {
    componentError.set(null);
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  showNotification(type: 'success' | 'error' | 'warning' | 'info', message: string) {
    componentNotification.set({ type, message, show: true });
  },

  // –°–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  hideNotification() {
    componentNotification.set(null);
  },

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  async reloadComponents() {
    componentsLoading = false;
    availableComponents.set([]);
    await this.loadAvailableComponents();
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–æ —Ç–∏–ø—É
  getComponentsByType(type: string): Component[] {
    return get(availableComponents).filter(component => component.type === type);
  }
};

// –ü—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ store –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
export const isCreatingComponent = derived(componentEditMode, $editMode => $editMode === 'create');
export const isEditingComponent = derived(componentEditMode, $editMode => $editMode === 'edit');
export const isViewingComponent = derived(componentEditMode, $editMode => $editMode === 'view');
export const hasCurrentComponent = derived(currentComponent, $currentComponent => $currentComponent !== null);
