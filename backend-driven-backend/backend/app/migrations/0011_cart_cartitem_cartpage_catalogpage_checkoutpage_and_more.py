# Generated by Django 4.2 on 2025-09-26 09:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('garpix_page', '0028_formcomponent_formevent_basecomponent_draft_of_and_more'),
        ('app', '0010_alter_layout_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price_snapshot', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена на момент добавления')),
            ],
            options={
                'verbose_name': 'Позиция в корзине',
                'verbose_name_plural': 'Позиции в корзине',
            },
        ),
        migrations.CreateModel(
            name='CartPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basepage')),
            ],
            options={
                'verbose_name': 'Страница корзины',
                'verbose_name_plural': 'Страницы корзины',
            },
            bases=('garpix_page.basepage',),
        ),
        migrations.CreateModel(
            name='CatalogPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basepage')),
            ],
            options={
                'verbose_name': 'Каталог',
                'verbose_name_plural': 'Каталоги',
            },
            bases=('garpix_page.basepage',),
        ),
        migrations.CreateModel(
            name='CheckoutPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basepage')),
            ],
            options={
                'verbose_name': 'Оформление заказа',
                'verbose_name_plural': 'Оформления заказа',
            },
            bases=('garpix_page.basepage',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basepage')),
            ],
            options={
                'verbose_name': 'Главная страница',
                'verbose_name_plural': 'Главные страницы',
            },
            bases=('garpix_page.basepage',),
        ),
        migrations.CreateModel(
            name='NewsListPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basepage')),
            ],
            options={
                'verbose_name': 'Новости (список)',
                'verbose_name_plural': 'Новости (списки)',
            },
            bases=('garpix_page.basepage',),
        ),
        migrations.CreateModel(
            name='NewsPost',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basepage')),
                ('content', models.TextField(blank=True, default='', verbose_name='Текст')),
                ('content_en', models.TextField(blank=True, default='', null=True, verbose_name='Текст')),
                ('content_de', models.TextField(blank=True, default='', null=True, verbose_name='Текст')),
                ('content_ru', models.TextField(blank=True, default='', null=True, verbose_name='Текст')),
                ('content_zh_hans', models.TextField(blank=True, default='', null=True, verbose_name='Текст')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='news/', verbose_name='Обложка')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
            bases=('garpix_page.basepage',),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_key', models.CharField(db_index=True, max_length=40)),
                ('email', models.EmailField(blank=True, default='', max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, default='', max_length=32, verbose_name='Телефон')),
                ('status', models.CharField(choices=[('pending', 'Ожидает подтверждения/оплаты'), ('paid', 'Оплачен'), ('shipped', 'Отправлен'), ('delivered', 'Доставлен'), ('cancelled', 'Отменён')], default='pending', max_length=16)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма')),
                ('delivery_address', models.CharField(blank=True, default='', max_length=255, verbose_name='Адрес доставки')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='ProductPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basepage')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена')),
                ('currency', models.CharField(default='RUB', max_length=8, verbose_name='Валюта')),
                ('short_description', models.CharField(blank=True, default='', max_length=255, verbose_name='Короткое описание')),
                ('short_description_en', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Короткое описание')),
                ('short_description_de', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Короткое описание')),
                ('short_description_ru', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Короткое описание')),
                ('short_description_zh_hans', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Короткое описание')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='Описание')),
                ('description_de', models.TextField(blank=True, default='', null=True, verbose_name='Описание')),
                ('description_ru', models.TextField(blank=True, default='', null=True, verbose_name='Описание')),
                ('description_zh_hans', models.TextField(blank=True, default='', null=True, verbose_name='Описание')),
                ('product_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='app.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
            bases=('garpix_page.basepage',),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('alt', models.CharField(blank=True, default='', max_length=255, verbose_name='ALT-текст')),
                ('sort', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app.productpage')),
            ],
            options={
                'verbose_name': 'Изображение товара',
                'verbose_name_plural': 'Изображения товара',
                'ordering': ('sort', 'id'),
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена позиции')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.productpage')),
            ],
            options={
                'verbose_name': 'Товар в заказе',
                'verbose_name_plural': 'Товары в заказе',
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['session_key'], name='app_order_session_51fc75_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='app_order_status_ffcc5e_idx'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.cart'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.productpage'),
        ),
        migrations.AddIndex(
            model_name='cart',
            index=models.Index(fields=['session_key'], name='app_cart_session_74d978_idx'),
        ),
        migrations.AddConstraint(
            model_name='cartitem',
            constraint=models.UniqueConstraint(fields=('cart', 'product'), name='uniq_cart_product'),
        ),
    ]
