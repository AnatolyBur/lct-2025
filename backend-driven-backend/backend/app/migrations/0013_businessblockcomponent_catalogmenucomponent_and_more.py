# Generated by Django 4.2 on 2025-09-28 19:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('garpix_page', '0030_formcomponent_form_description_de_and_more'),
        ('app', '0012_preview'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessBlockComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('show_on_mobile', models.BooleanField(default=True, verbose_name='Показывать на мобильных')),
                ('max_items', models.PositiveSmallIntegerField(default=6, verbose_name='Макс. элементов')),
            ],
            options={
                'verbose_name': 'Блок "Всё для бизнеса"',
                'verbose_name_plural': 'Блоки "Всё для бизнеса"',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='CatalogMenuComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('menu_code', models.CharField(default='catalog', help_text='Код меню из garpix-menu (поле "code").', max_length=64)),
                ('button_title', models.CharField(default='Все категории', max_length=64, verbose_name='Текст кнопки')),
                ('max_depth', models.PositiveSmallIntegerField(default=2, verbose_name='Макс. глубина вложенности')),
                ('columns', models.PositiveSmallIntegerField(default=5, verbose_name='Сколько колонок показывать')),
                ('show_icons', models.BooleanField(default=True, verbose_name='Показывать иконки, если заданы')),
            ],
            options={
                'verbose_name': 'Меню каталога',
                'verbose_name_plural': 'Меню каталога',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='CategoryTilesComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('columns', models.PositiveSmallIntegerField(default=8, verbose_name='Количество колонок')),
            ],
            options={
                'verbose_name': 'Категорийные плашки',
                'verbose_name_plural': 'Категорийные плашки',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='FavoritesTeaserComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('mode', models.CharField(choices=[('teaser', 'Тизер с призывом'), ('list', 'Мини-список карточек')], default='teaser', max_length=10, verbose_name='Режим')),
                ('subtitle', models.CharField(blank=True, default='', max_length=200, verbose_name='Подзаголовок')),
                ('teaser_text', models.CharField(blank=True, default='Перейти в избранное', max_length=64, verbose_name='Текст кнопки')),
                ('teaser_url', models.CharField(blank=True, default='/favorites/', max_length=255, verbose_name='Ссылка кнопки')),
                ('columns', models.PositiveSmallIntegerField(default=4, verbose_name='Карточек в ряд (desktop)')),
                ('limit', models.PositiveSmallIntegerField(default=8, verbose_name='Макс. карточек')),
            ],
            options={
                'verbose_name': 'Избранное (тизер/список)',
                'verbose_name_plural': 'Избранное (тизер/список)',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='FooterLinkGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Заголовок группы')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Группа ссылок',
                'verbose_name_plural': 'Группы ссылок',
                'ordering': ('order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='FooterLinksComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('copyright_text', models.CharField(default='© 2025 Компания', max_length=255, verbose_name='Копирайт/подвал')),
                ('show_socials', models.BooleanField(default=False, verbose_name='Показывать соцсети')),
            ],
            options={
                'verbose_name': 'Футер',
                'verbose_name_plural': 'Футеры',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='HeaderNavComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='ui/', verbose_name='Логотип')),
                ('search_placeholder', models.CharField(blank=True, default='Поиск по объявлениям', max_length=100, verbose_name='Плейсхолдер поиска')),
                ('show_favorites', models.BooleanField(default=True, verbose_name='Показывать "Избранное"')),
                ('show_profile', models.BooleanField(default=True, verbose_name='Показывать профиль')),
                ('post_button_text', models.CharField(blank=True, default='Разместить объявление', max_length=64, verbose_name='Текст кнопки "Разместить объявление"')),
                ('post_button_url', models.CharField(blank=True, default='/add', max_length=255, verbose_name='Ссылка кнопки "Разместить объявление"')),
            ],
            options={
                'verbose_name': 'Верхнее меню',
                'verbose_name_plural': 'Верхнее меню',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='HeroBannerComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('subtitle', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('cta_text', models.CharField(blank=True, default='', max_length=64, verbose_name='Текст кнопки')),
                ('cta_url', models.CharField(blank=True, default='/', max_length=255, verbose_name='Ссылка кнопки')),
                ('image', models.ImageField(blank=True, null=True, upload_to='ui/hero/', verbose_name='Картинка (desktop)')),
                ('image_mobile', models.ImageField(blank=True, null=True, upload_to='ui/hero/', verbose_name='Картинка (mobile)')),
                ('align', models.CharField(choices=[('left', 'Текст слева'), ('right', 'Текст справа'), ('center', 'Текст по центру')], default='left', max_length=10, verbose_name='Выравнивание контента')),
                ('dark_text', models.BooleanField(default=False, help_text='Если фон светлый, выключите.', verbose_name='Тёмный текст')),
                ('height', models.PositiveSmallIntegerField(default=36, help_text='Напр., 36 = 36vh', verbose_name='Высота (vh)')),
            ],
            options={
                'verbose_name': 'Большой баннер',
                'verbose_name_plural': 'Большие баннеры',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='PromoAdComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('mode', models.CharField(choices=[('image', 'Баннер-картинка'), ('html', 'Встраиваемый HTML')], default='image', max_length=8, verbose_name='Режим')),
                ('image', models.ImageField(blank=True, null=True, upload_to='ui/ads/', verbose_name='Картинка (desktop)')),
                ('image_mobile', models.ImageField(blank=True, null=True, upload_to='ui/ads/', verbose_name='Картинка (mobile)')),
                ('link_url', models.CharField(blank=True, default='', max_length=500, verbose_name='Ссылка')),
                ('is_external', models.BooleanField(default=True, verbose_name='Открывать в новой вкладке')),
                ('rel_noopener', models.BooleanField(default=True, verbose_name='Добавить rel="noopener nofollow"')),
                ('aria_label', models.CharField(blank=True, default='Рекламный баннер', max_length=120, verbose_name='ARIA label (доступность)')),
                ('html', models.TextField(blank=True, default='', verbose_name='HTML-код (скрипт/виджет)')),
                ('full_width', models.BooleanField(default=True, verbose_name='На всю ширину контейнера')),
                ('background', models.CharField(blank=True, default='', max_length=32, verbose_name='Цвет фона (CSS)')),
                ('padding_y', models.PositiveSmallIntegerField(default=12, verbose_name='Вертикальные отступы (px)')),
                ('margin_y', models.PositiveSmallIntegerField(default=16, verbose_name='Внешние отступы (px)')),
            ],
            options={
                'verbose_name': 'Реклама (баннер/HTML)',
                'verbose_name_plural': 'Реклама (баннеры/HTML)',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='RecommendationsComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('subtitle', models.CharField(blank=True, default='', max_length=200, verbose_name='Подзаголовок')),
                ('columns', models.PositiveSmallIntegerField(default=5, verbose_name='Карточек в ряд')),
                ('limit', models.PositiveSmallIntegerField(default=15, verbose_name='Макс. карточек к показу')),
            ],
            options={
                'verbose_name': 'Рекомендации',
                'verbose_name_plural': 'Рекомендации',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='ServicesAndFeaturesComponent',
            fields=[
                ('basecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='garpix_page.basecomponent')),
                ('columns', models.PositiveSmallIntegerField(default=4, verbose_name='Колонок на desktop')),
                ('max_items', models.PositiveSmallIntegerField(default=12, verbose_name='Макс. элементов')),
                ('compact', models.BooleanField(default=True, verbose_name='Компактный режим (меньше текста)')),
            ],
            options={
                'verbose_name': 'Сервисы и услуги',
                'verbose_name_plural': 'Сервисы и услуги',
            },
            bases=('garpix_page.basecomponent',),
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Название')),
                ('description', models.CharField(blank=True, default='', max_length=200, verbose_name='Описание')),
                ('url', models.CharField(default='/', max_length=255, verbose_name='Ссылка')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='ui/services/', verbose_name='Иконка')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_external', models.BooleanField(default=False, verbose_name='Открывать в новой вкладке')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.servicesandfeaturescomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Элемент сервиса',
                'verbose_name_plural': 'Элементы сервиса',
                'ordering': ('order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='RecommendationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('url', models.CharField(default='/', max_length=255, verbose_name='Ссылка')),
                ('image', models.ImageField(blank=True, null=True, upload_to='ui/reco/', verbose_name='Изображение')),
                ('price_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Цена')),
                ('price_currency', models.CharField(default='₽', max_length=8, verbose_name='Валюта')),
                ('address', models.CharField(blank=True, default='', max_length=120, verbose_name='Адрес/Регион')),
                ('is_favorite', models.BooleanField(default=False, verbose_name='Отмечено избранным')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.recommendationscomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Карточка рекомендации',
                'verbose_name_plural': 'Карточки рекомендаций',
                'ordering': ('order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='FooterLinkItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Название ссылки')),
                ('url', models.CharField(max_length=255, verbose_name='URL')),
                ('is_external', models.BooleanField(default=False, verbose_name='Открывать в новой вкладке')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='app.footerlinkgroup', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Ссылка футера',
                'verbose_name_plural': 'Ссылки футера',
                'ordering': ('order', 'id'),
            },
        ),
        migrations.AddField(
            model_name='footerlinkgroup',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='app.footerlinkscomponent', verbose_name='Компонент'),
        ),
        migrations.CreateModel(
            name='FavoriteTeaserItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('url', models.CharField(default='/', max_length=255, verbose_name='Ссылка')),
                ('image', models.ImageField(blank=True, null=True, upload_to='ui/fav/', verbose_name='Изображение')),
                ('price_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Цена')),
                ('price_currency', models.CharField(default='₽', max_length=8, verbose_name='Валюта')),
                ('address', models.CharField(blank=True, default='', max_length=120, verbose_name='Адрес/Регион')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.favoritesteasercomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Карточка избранного',
                'verbose_name_plural': 'Карточки избранного',
                'ordering': ('order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='CategoryTileItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80, verbose_name='Название')),
                ('url', models.CharField(default='/', max_length=255, verbose_name='Ссылка')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='ui/category_tiles/', verbose_name='Иконка')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.categorytilescomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Плашка',
                'verbose_name_plural': 'Плашки',
                'ordering': ('order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='BusinessBlockItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Название')),
                ('description', models.CharField(blank=True, default='', max_length=200, verbose_name='Короткое описание')),
                ('url', models.CharField(default='/', max_length=255, verbose_name='Ссылка')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='ui/business/', verbose_name='Иконка')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_external', models.BooleanField(default=False, verbose_name='Открывать в новой вкладке')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.businessblockcomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Элемент блока',
                'verbose_name_plural': 'Элементы блока',
                'ordering': ('order', 'id'),
            },
        ),
    ]
